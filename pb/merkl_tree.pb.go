// Code generated by protoc-gen-go. DO NOT EDIT.
// source: merkl_tree.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MerkleTree struct {
	HashList             [][]byte `protobuf:"bytes,1,rep,name=hash_list,json=hashList,proto3" json:"hash_list,omitempty"`
	LeafNum              int32    `protobuf:"varint,3,opt,name=leaf_num,json=leafNum,proto3" json:"leaf_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MerkleTree) Reset()         { *m = MerkleTree{} }
func (m *MerkleTree) String() string { return proto.CompactTextString(m) }
func (*MerkleTree) ProtoMessage()    {}
func (*MerkleTree) Descriptor() ([]byte, []int) {
	return fileDescriptor_merkl_tree_a1e965ad439fb92e, []int{0}
}
func (m *MerkleTree) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerkleTree.Unmarshal(m, b)
}
func (m *MerkleTree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerkleTree.Marshal(b, m, deterministic)
}
func (dst *MerkleTree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerkleTree.Merge(dst, src)
}
func (m *MerkleTree) XXX_Size() int {
	return xxx_messageInfo_MerkleTree.Size(m)
}
func (m *MerkleTree) XXX_DiscardUnknown() {
	xxx_messageInfo_MerkleTree.DiscardUnknown(m)
}

var xxx_messageInfo_MerkleTree proto.InternalMessageInfo

func (m *MerkleTree) GetHashList() [][]byte {
	if m != nil {
		return m.HashList
	}
	return nil
}

func (m *MerkleTree) GetLeafNum() int32 {
	if m != nil {
		return m.LeafNum
	}
	return 0
}

func init() {
	proto.RegisterType((*MerkleTree)(nil), "pb.MerkleTree")
}

func init() { proto.RegisterFile("merkl_tree.proto", fileDescriptor_merkl_tree_a1e965ad439fb92e) }

var fileDescriptor_merkl_tree_a1e965ad439fb92e = []byte{
	// 115 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xc8, 0x4d, 0x2d, 0xca,
	0xce, 0x89, 0x2f, 0x29, 0x4a, 0x4d, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48,
	0x52, 0x72, 0xe1, 0xe2, 0xf2, 0x05, 0x89, 0xa7, 0x86, 0x14, 0xa5, 0xa6, 0x0a, 0x49, 0x73, 0x71,
	0x66, 0x24, 0x16, 0x67, 0xc4, 0xe7, 0x64, 0x16, 0x97, 0x48, 0x30, 0x2a, 0x30, 0x6b, 0xf0, 0x04,
	0x71, 0x80, 0x04, 0x7c, 0x32, 0x8b, 0x4b, 0x84, 0x24, 0xb9, 0x38, 0x72, 0x52, 0x13, 0xd3, 0xe2,
	0xf3, 0x4a, 0x73, 0x25, 0x98, 0x15, 0x18, 0x35, 0x58, 0x83, 0xd8, 0x41, 0x7c, 0xbf, 0xd2, 0xdc,
	0x24, 0x36, 0xb0, 0x81, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa6, 0xe7, 0x7d, 0x9c, 0x64,
	0x00, 0x00, 0x00,
}
